<?php

/**
 * @file
 * Functions to support the Artifact Info theme.
 */

declare(strict_types=1);

/**
 * @file
 * Functions to support the Artifact Info theme.
 */

use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function artifactinfo_preprocess_html(array &$variables): void {
  // Add theme-specific body classes.
  $variables['attributes']['class'][] = 'artifactinfo-theme';

  // Add current page path as body class for styling.
  $current_path = \Drupal::service('path.current')->getPath();
  $path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  $path_alias = ltrim($path_alias, '/');

  if (!empty($path_alias)) {
    $variables['attributes']['class'][] = 'path--' . Html::getClass($path_alias);
  }

  // Add node type class if on a node page.
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node) {
    $variables['attributes']['class'][] = 'node-type--' . Html::getClass($node->getType());
  }

  // Add user status classes.
  $user = \Drupal::currentUser();
  if ($user->isAuthenticated()) {
    $variables['attributes']['class'][] = 'user-logged-in';

    // Add admin-specific classes for toolbar compatibility.
    if ($user->hasPermission('access toolbar')) {
      $variables['attributes']['class'][] = 'user-has-toolbar';

      // Check if this is an admin page.
      $route_name = \Drupal::routeMatch()->getRouteName();
      if (strpos($route_name, 'system.admin') === 0 ||
          strpos($route_name, 'entity.') === 0 ||
          strpos($current_path, '/admin') === 0) {
        $variables['attributes']['class'][] = 'path-admin';
      }
    }
  }
  else {
    $variables['attributes']['class'][] = 'user-anonymous';
  }

  // Add responsive image support flag.
  $variables['attributes']['class'][] = 'has-responsive-images';
}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function artifactinfo_preprocess_page(array &$variables): void {
  // Determine layout classes based on sidebar presence.
  $layout_classes = ['layout-main'];

  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $layout_classes[] = 'has-both-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $layout_classes[] = 'has-sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $layout_classes[] = 'has-sidebar-second';
  }

  $variables['layout_classes'] = implode(' ', $layout_classes);

  // Add site information variables.
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');
  $variables['site_slogan'] = $config->get('slogan');

  // Add current route information.
  $route_match = \Drupal::routeMatch();
  $variables['route_name'] = $route_match->getRouteName();

  // Add page-specific variables for front page.
  $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function artifactinfo_preprocess_block(array &$variables): void {
  // Add block ID as CSS class.
  if (isset($variables['elements']['#id'])) {
    $variables['attributes']['class'][] = 'block--id-' . Html::getClass($variables['elements']['#id']);
  }

  // Add region-specific classes.
  if (isset($variables['elements']['#configuration']['region'])) {
    $region = $variables['elements']['#configuration']['region'];
    $variables['attributes']['class'][] = 'block--region-' . Html::getClass($region);
  }
}

/**
 * Implements hook_preprocess_HOOK() for paragraph.html.twig.
 */
function artifactinfo_preprocess_paragraph(array &$variables) {
  if ($variables['paragraph']->bundle() === 'hero_banner') {
    // Inject a dynamic value.
    $count = \Drupal::entityQuery('node')
      ->accessCheck(TRUE)
      ->condition('type', 'artifacts')
      ->count()
      ->execute();
    $variables['artifactCount'] = $count;
    $variables['totalImageCount'] = getTotalImageCountOptimized();

    $variables['#attached']['drupalSettings']['artifactinfo']['artifactCount'] = (int) $count;
    $variables['#attached']['drupalSettings']['artifactinfo']['totalImageCount'] = (int) $variables['totalImageCount'];
  }
}

/**
 * Implements hook_preprocess_HOOK() for webform.html.twig.
 */
function artifactinfo_preprocess_webform(array &$variables): void {
  // Attach user-form library to all webforms.
  $variables['#attached']['library'][] = 'artifactinfo/user-form';
}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function artifactinfo_preprocess_page_alter(array &$variables): void {
  // Attach user-form library to contact pages.
  $route_name = \Drupal::routeMatch()->getRouteName();
  $current_path = \Drupal::service('path.current')->getPath();

  // Check if we're on a contact form page or webform page.
  if (strpos($route_name, 'contact') !== FALSE ||
      strpos($route_name, 'webform') !== FALSE ||
      strpos($current_path, '/contact') !== FALSE) {
    $variables['#attached']['library'][] = 'artifactinfo/user-form';
  }
}

/**
 * Get total count of images from all artifact nodes.
 *
 * @return int
 *   The total count of images across all artifact nodes.
 */
function getTotalImageCountOptimized(): int {
  $total_count = 0;
  $database = \Drupal::database();

  // Image field machine names for artifacts.
  $image_fields = [
    'field_artifact_image_1',
    'field_artifact_image_2',
    'field_artifact_image_3',
    'field_artifact_image_4',
  ];

  // Get all published artifact node IDs first.
  $query = \Drupal::entityQuery('node')
    ->condition('type', 'artifacts')
    ->condition('status', 1)
    ->accessCheck(FALSE);

  $nids = $query->execute();

  // Debug: Check if we have any artifact nodes.
  \Drupal::logger('artifactinfo')->info('Found @count artifact nodes: @nids', [
    '@count' => count($nids),
    '@nids' => implode(', ', $nids),
  ]);

  if (!empty($nids)) {
    foreach ($image_fields as $field_name) {
      $field_table = 'node__' . $field_name;

      // Check if table exists.
      if (!$database->schema()->tableExists($field_table)) {
        \Drupal::logger('artifactinfo')->warning('Table @table does not exist', ['@table' => $field_table]);
        continue;
      }

      // Build the query to count non-empty image fields.
      $field_query = $database->select($field_table, 'f')
        ->condition('f.entity_id', $nids, 'IN')
        ->condition('f.bundle', 'artifacts')
        ->isNotNull('f.' . $field_name . '_target_id');

      $field_query->addExpression('COUNT(*)', 'image_count');
      $result = $field_query->execute()->fetchField();
      $field_count = (int) $result;

      // Debug: Log count for each field.
      \Drupal::logger('artifactinfo')->info('Field @field has @count images', [
        '@field' => $field_name,
        '@count' => $field_count,
      ]);

      $total_count += $field_count;
    }
  }

  \Drupal::logger('artifactinfo')->info('Total image count: @count', ['@count' => $total_count]);

  return $total_count;
}
