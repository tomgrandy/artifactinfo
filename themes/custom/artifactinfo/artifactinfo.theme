<?php

declare(strict_types=1);

/**
 * @file
 * Functions to support the Artifact Info theme.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function artifactinfo_preprocess_html(array &$variables): void {
  // Add theme-specific body classes.
  $variables['attributes']['class'][] = 'artifactinfo-theme';

  // Add current page path as body class for styling.
  $current_path = \Drupal::service('path.current')->getPath();
  $path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  $path_alias = ltrim($path_alias, '/');

  if (!empty($path_alias)) {
    $variables['attributes']['class'][] = 'path--' . Html::getClass($path_alias);
  }

  // Add node type class if on a node page.
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node) {
    $variables['attributes']['class'][] = 'node-type--' . Html::getClass($node->getType());
  }

  // Add user status classes.
  $user = \Drupal::currentUser();
  if ($user->isAuthenticated()) {
    $variables['attributes']['class'][] = 'user-logged-in';

    // Add admin-specific classes for toolbar compatibility.
    if ($user->hasPermission('access toolbar')) {
      $variables['attributes']['class'][] = 'user-has-toolbar';

      // Check if this is an admin page.
      $route_name = \Drupal::routeMatch()->getRouteName();
            if (strpos($route_name, 'system.admin') === 0 ||
          strpos($route_name, 'entity.') === 0 ||
          strpos($current_path, '/admin') === 0) {
        $variables['attributes']['class'][] = 'path-admin';
      }
    }
  } else {
    $variables['attributes']['class'][] = 'user-anonymous';
  }

  // Add responsive image support flag.
  $variables['attributes']['class'][] = 'has-responsive-images';
}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function artifactinfo_preprocess_page(array &$variables): void {
  // Determine layout classes based on sidebar presence.
  $layout_classes = ['layout-main'];

  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $layout_classes[] = 'has-both-sidebars';
  } elseif (!empty($variables['page']['sidebar_first'])) {
    $layout_classes[] = 'has-sidebar-first';
  } elseif (!empty($variables['page']['sidebar_second'])) {
    $layout_classes[] = 'has-sidebar-second';
  }

  $variables['layout_classes'] = implode(' ', $layout_classes);

  // Add site information variables.
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');
  $variables['site_slogan'] = $config->get('slogan');

  // Add current route information.
  $route_match = \Drupal::routeMatch();
  $variables['route_name'] = $route_match->getRouteName();

  // Add page-specific variables for front page.
  $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function artifactinfo_preprocess_block(array &$variables): void {
  // Add block ID as CSS class.
  if (isset($variables['elements']['#id'])) {
    $variables['attributes']['class'][] = 'block--id-' . Html::getClass($variables['elements']['#id']);
  }

  // Add region-specific classes.
  if (isset($variables['elements']['#configuration']['region'])) {
    $region = $variables['elements']['#configuration']['region'];
    $variables['attributes']['class'][] = 'block--region-' . Html::getClass($region);
  }
}


/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function artifactinfo_preprocess_paragraph(array &$variables): void {
  if ($variables['paragraph']->bundle() === 'hero_banner') {
    // Inject a dynamic value.
    $count = \Drupal::entityQuery('node')
      ->accessCheck(TRUE)
      ->condition('type', 'artifacts')
      ->count()
      ->execute();
    $variables['dynamic_text'] = $count;
  }
}
